plugins {
    id 'io.spring.dependency-management' version '1.1.7'
    id 'java'
    id 'java-library'
    id 'org.owasp.dependencycheck' version '12.0.1'
}

project.ext {
    releaseMode = project.hasProperty("releaseMode") ? project.releaseMode.toBoolean() : false
    publishRepo = "https://maven.pkg.github.com/reportportal/commons"
    dependencyRepos = ["commons-bom"]
}

def scriptsUrl = 'https://raw.githubusercontent.com/reportportal/gradle-scripts/' +
        (releaseMode ? getProperty('scripts.version') : 'develop')

apply from: scriptsUrl + '/release-commons.gradle'
apply from: scriptsUrl + '/signing.gradle'
//apply from: scriptsUrl + '/build-quality.gradle' // TODO: fix scripts

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

ext['spring-boot.version'] = "${springBootVersion}"

repositories {
    mavenCentral { url "https://repo1.maven.org/maven2" }
    if (!releaseMode) {
        maven { url 'https://jitpack.io' }
    }
}

dependencyManagement {
    imports {
        mavenBom('com.epam.reportportal:commons-bom:5.13.1')
    }
}

dependencies {
    if (releaseMode) {
        api 'com.epam.reportportal:commons-reporting:5.13.1'
    } else {
        api 'com.github.reportportal:commons-reporting:56e3113'
    }
    api 'org.springframework:spring-webmvc'
    api 'org.springframework.security:spring-security-core'
    api 'org.apache.tika:tika-core'

    implementation "io.swagger.core.v3:swagger-annotations-jakarta:2.2.27"
    api "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    api "org.apache.commons:commons-lang3:${commonsLangVersion}"
    api "com.google.guava:guava:${guava}"
    implementation 'jakarta.servlet:jakarta.servlet-api:6.1.0'
    implementation "org.hibernate.validator:hibernate-validator:${hibernateValidatorVersion}"

    implementation 'org.freemarker:freemarker'
    implementation 'ch.qos.logback:logback-classic'
    implementation 'net.coobird:thumbnailator:0.4.20'
    implementation 'jakarta.inject:jakarta.inject-api:2.0.1'

    // add lombok support
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${junitVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
    testImplementation "org.mockito:mockito-junit-jupiter:${mockitoJunitJupiter}"
    testImplementation "org.hamcrest:hamcrest:2.2"
    testImplementation "org.glassfish:jakarta.el:4.0.2"
}

test {
    useJUnitPlatform()
    testLogging {
        events = ['failed']
        exceptionFormat = 'short'
    }
    reports {
        junitXml.required = true
    }
}

tasks.preTagCommit.enabled = false
tasks.updateVersion.enabled = false
tasks.commitNewVersion.enabled = false
